FROM us-central1-docker.pkg.dev/lemmingsinthewind/ros2/ros2base:0.2

ARG ZED_SDK_MAJOR=4
ARG ZED_SDK_MINOR=1
ARG JETPACK_MAJOR=5
ARG L4T_MAJOR=36
ARG L4T_MINOR=3

ARG ROS2_DIST=humble       # ROS2 distribution

# ZED ROS2 Wrapper dependencies version
ARG XACRO_VERSION=2.0.8
ARG DIAGNOSTICS_VERSION=3.0.0
ARG AMENT_LINT_VERSION=0.12.4
ARG GEOGRAPHIC_INFO_VERSION=1.0.4
ARG ROBOT_LOCALIZATION_VERSION=3.4.2
ENV DEBIAN_FRONTEND noninteractive

# Disable apt-get warnings
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 42D5A192B819C5DA || true && \
  apt-get update || true && apt-get install -y --no-install-recommends apt-utils dialog
  
ENV TZ=America/Los_Angeles

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
  apt remove libopencv-dev python3-opencv && \
  apt purge -y '*opencv*' && \
  apt-get update && \
  apt-get upgrade -y && \
  apt-get install -y pluginlib-dev screen libfmt-dev ffmpeg liburdfdom-tools libpng-dev libboost-all-dev nlohmann-json3-dev libboost-program-options-dev libssl-dev libwebsocketpp-dev  libtinyxml-dev lsb-release wget less udev sudo build-essential cmake python3 python3-dev python3-pip python3-wheel git jq libpq-dev zstd usbutils    

# Install the ZED SDK
RUN echo "# R${L4T_MAJOR} (release), REVISION: ${L4T_MINOR}" > /etc/nv_tegra_release && \
  apt-get update -y || true && \
  apt-get install -y --no-install-recommends zstd wget less cmake curl gnupg2 \
  build-essential python3 python3-pip python3-dev python3-setuptools libusb-1.0-0-dev -y && \
  pip install protobuf && \
  wget -q --no-check-certificate -O ZED_SDK_Linux_JP.run \
  https://download.stereolabs.com/zedsdk/${ZED_SDK_MAJOR}.${ZED_SDK_MINOR}/l4t${L4T_MAJOR}.${L4T_MINOR}/jetsons && \
  chmod +x ZED_SDK_Linux_JP.run ; ./ZED_SDK_Linux_JP.run silent skip_tools && \
  rm -rf /usr/local/zed/resources/* && \
  rm -rf ZED_SDK_Linux_JP.run 

# Install the ZED ROS2 Wrapper
ENV ROS_DISTRO ${ROS2_DIST}

RUN  curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null &&\
apt-get update && apt-get upgrade -y

# Install packages
WORKDIR /root/ros2_ws/src
RUN git clone -b humble https://github.com/ros/pluginlib.git && \   
  git clone --recursive https://github.com/stereolabs/zed-ros2-wrapper.git && \
  git clone https://github.com/odriverobotics/ros_odrive.git && \
  git clone -b humble https://github.com/ros-perception/vision_opencv.git && \
  git clone https://github.com/opendedup/rtf_sensors.git && \
  git clone https://github.com/joshnewans/twist_stamper.git
RUN  apt-get update && apt-get upgrade -y && apt install -y ros-$ROS_DISTRO-twist-mux ros-$ROS_DISTRO-foxglove-bridge ros-$ROS_DISTRO-rtabmap-ros

WORKDIR /root/ros2_ws/
RUN source /opt/ros/${ROS_DISTRO}/install/setup.bash && \
  rosdep fix-permissions && \ 
  rosdep update && \
  rosdep install -y --from-paths src --ignore-src --rosdistro humble -r  && \
  apt-get update &&   apt-get upgrade -y &&   apt-get install -y pluginlib-dev && \
  rm -rf /var/lib/apt/lists/*

# Install cython
RUN python3 -m pip install --upgrade cython && \
    pip install -U google-cloud-aiplatform Jetson.GPIO google-cloud-speech && \
    pip install empy Adafruit-Blinka adafruit-circuitpython-lsm6ds squaternion pyusb click && \
    pip uninstall -y em 

# Build the dependencies and the ZED ROS2 Wrapper
RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && \
source /opt/ros/$ROS_DISTRO/install/setup.bash && \
colcon build --parallel-workers $(nproc) \
--event-handlers console_direct+ \
--cmake-args ' -DCMAKE_BUILD_TYPE=Release' \
' -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs' \
' -DCMAKE_CXX_FLAGS="-Wl,--allow-shlib-undefined"' \
' --no-warn-unused-cli' "

COPY resources/embeddings.jsonl /opt/shimmy/embeddings/
COPY resources/mmembeddings.jsonl /opt/shimmy/mmembeddings/embeddings.jsonl
COPY resources/s_env.sh /root/ros2_ws/

WORKDIR /root

ADD https://api.github.com/repos/NVIDIA-AI-IOT/whisper_trt/git/refs/heads/main /tmp/whisper_trt_version.json
    
RUN pip3 install --no-cache-dir --verbose openai-whisper && \
    git clone https://github.com/NVIDIA-AI-IOT/whisper_trt /opt/whisper_trt 

RUN rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /root/ros2_ws

# Setup environment variabless
COPY ros_entrypoint_jetson.sh /sbin/ros_entrypoint.sh
RUN sudo chmod 755 /sbin/ros_entrypoint.sh